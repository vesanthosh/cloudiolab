map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
}
upstream portus {
    least_conn;
    server portus:3000 max_fails=3 fail_timeout=15s;
}
upstream registry {
    least_conn;
    server registry:5000 max_fails=3 fail_timeout=15s;
}
server {
    listen 80;
    listen [::]:80;
    server_name docker.cloudiolab.com;
    location / {
        return 301 https://$host$request_uri;
    }
    location ~ /.well-known/acme-challenge {
        allow all;
        root /usr/share/nginx/html/docker.cloudiolab.com;
    }
    root /usr/share/nginx/html/docker.cloudiolab.com;
    index index.html;
}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name docker.cloudiolab.com;
    root /srv/Portus/public;
    include mime.types;
    default_type application/octet-stream;
    charset UTF-8;
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_header_timeout 240;
    client_body_timeout 240;
    fastcgi_read_timeout 249;
    reset_timedout_connection on;
    ssl_buffer_size 8k;
    chunked_transfer_encoding on;
    ssl_dhparam /etc/ssl/certs/dhparam/docker.cloudiolab.com-dhparam-4096.pem;
    ssl_certificate /etc/letsencrypt/live/docker.cloudiolab.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/docker.cloudiolab.com/privkey.pem;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Scheme $scheme;
    client_max_body_size 0;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-UA-Compatible "IE=edge";
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
#-----------------clear---------------
    location /v2/ {
        if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
            return 404;
        }
        add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;
        proxy_pass https://registry;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 900;
        proxy_buffering on;
    }
    location = /v2/token {
        proxy_pass https://portus;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 900;
        proxy_buffering on;
    }
    location = /v2/webhooks/events {
        proxy_pass https://portus;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 900;
        proxy_buffering on;
    }
    location ~ ^/(assets)/ {
        access_log off;
        gzip_static on;
        expires max;
        add_header Cache-Control public;
        add_header Last-Modified "";
        add_header ETag "";
        break;
    }
    location / {
        try_files $uri/index.html $uri.html $uri @portus;
    }
    location @portus {
        proxy_pass https://portus;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 900;
        proxy_buffering on;
    }
}
